name: Publish

on:
  push:
    tags:
      - '*'
jobs:

  build:

    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            binary_target: x86_64-unknown-linux-musl
            profile: release+static+x86_64
          - os: ubuntu-latest
            binary_target: aarch64-unknown-linux-musl
            profile: release+static+aarch64
          - os: macos-11
            binary_target: x86_64-apple-darwin
            profile: release
          - os: macos-11
            binary_target: aarch64-apple-darwin
            profile: release

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Install musl tools
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get update && sudo apt-get install musl-tools

    - name: Install musl (aarch64) tools
      if: matrix.binary_target == 'aarch64-unknown-linux-musl'
      run: sudo ./scripts/install-musl-aarch64-openssl.bash

    - name: Install rust for target ${{ matrix.binary_target }}
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.binary_target }}
        profile: minimal

    - uses: davidB/rust-cargo-make@v1
      with:
        version: 0.32.12

    - name: Pull tags
      run: git fetch --tags --prune --unshallow --force

    - name: Fetch `git describe --tags`
      id: git_desc
      run: |
        echo "::set-output name=result::$(git describe --tags)"

    - name: Build Binary
      if: matrix.binary_target == 'aarch64-unknown-linux-musl'
      run: >
        source scripts/musl-aarch64-env.bash;
        cargo make -p ${{ matrix.profile }}
        --env CARGO_MAKE_RELEASE_FLOW_TARGET=${{ matrix.binary_target }}
        --env CARGO_MAKE_PROJECT_VERSION=${{ steps.git_desc.outputs.result }}
        zip-release-ci-flow

    - name: Build Binary
      if: matrix.binary_target != 'aarch64-unknown-linux-musl'
      run: >
        cargo make -p ${{ matrix.profile }}
        --env CARGO_MAKE_RELEASE_FLOW_TARGET=${{ matrix.binary_target }}
        --env CARGO_MAKE_PROJECT_VERSION=${{ steps.git_desc.outputs.result }}
        zip-release-ci-flow

    - name: Upload Binaries
      uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: '*.zip'
        tag: ${{ github.ref }}
        overwrite: true
        file_glob: true
